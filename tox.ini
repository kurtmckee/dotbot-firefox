[tox]
min_version = 4.4.4
envlist =
    coverage-erase
    py{3.13, 3.12, 3.11, 3.10, 3.9}
    coverage-report
    mypy
labels =
    update=update


[testenv:coverage-erase]
description = Erase .coverage* files before testing
skip_install = true
deps = coverage[toml]
commands = coverage erase


[testenv:py{3.13, 3.12, 3.11, 3.10, 3.9}]
description = Run the test suite ({env_name})
depends =
    coverage-erase
package = wheel
wheel_build_env = build_wheel
deps =
    -rrequirements/test/requirements.txt
commands = {envpython} -W error -m coverage run -m pytest


[testenv:coverage-report{,-ci}]
description = Report code coverage after testing
depends =
    py{3.13, 3.12, 3.11, 3.10, 3.9}
skip_install = true
deps = coverage[toml]
commands_pre =
    -coverage combine
commands =
    coverage report
commands_post =
    # Only output an HTML report when running locally.
    !ci: coverage html --fail-under=0


[testenv:mypy]
description = Lint type annotations using mypy
deps =
    -rrequirements/mypy/requirements.txt
setenv =
    MYPY_FORCE_COLOR=1
commands = mypy


[testenv:update]
base_python = py3.13
recreate = true
description = Update testing and linting dependency versions
skip_install = true
deps =
    poetry
    poetry-plugin-export
    pre-commit
    upadup
commands =
    # Update test requirements
    poetry update --directory="requirements/mypy" --lock
    poetry export --directory="requirements/mypy" --output="requirements.txt" --without-hashes
    poetry update --directory="requirements/test" --lock
    poetry export --directory="requirements/test" --output="requirements.txt" --without-hashes

    # Update pre-commit hook versions
    pre-commit autoupdate
    upadup


[flake8]
max-line-length = 88
extend-ignore = E203
